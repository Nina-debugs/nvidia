/* below Event listener checks the loaded in iframe hide the banner */
window.addEventListener('bannerLoaded', function otcustomcallback(){
    if(window.location !== window.parent.location) {
        document.getElementById('onetrust-consent-sdk').style.display='none';
    }    
	
	/* SEO header tags issue fix */
	var tagsH2 = document.querySelectorAll('#onetrust-consent-sdk h2');
	for (var i = 0; i < tagsH2.length; i++) { otwrap(tagsH2[i], "ot-h2"); }

	var tagsH3 = document.querySelectorAll('#onetrust-consent-sdk h3');
	for (var i = 0; i < tagsH3.length; i++) { otwrap(tagsH3[i], "ot-h3"); }

	var tagsH4 = document.querySelectorAll('#onetrust-consent-sdk h4');
	for (var i = 0; i < tagsH4.length; i++) { otwrap(tagsH4[i], "ot-h4"); }

	function otwrap(tag, otclass) {
		
		if (tag.parentElement && tag.parentElement.tagName.toLowerCase() === 'aside' && tag.parentElement.classList.contains(otclass)) {
			return; // Already wrapped, do nothing
		}
		
		var wrapper = document.createElement("aside");
		wrapper.classList.add(otclass);

		wrapper.style.display = "inline";

		// Copy the classList from the original tag
	   wrapper.classList.add(...tag.classList);

		// Insert the wrapper before the original element
		tag.parentNode.insertBefore(wrapper, tag);

		// Move the original element inside the wrapper
		wrapper.appendChild(tag);
	}	
	/* SEO header tags issue fix */
	
    const translations = {
        "en": { "done": "Done" },
        "en-us": { "done": "Done" },
        "zh-cn": {"done": "完成"},
        "zh-tw": { "done": "完成" },
        "ja-jp": { "done": "完了する" },
        "ko-kr": { "done": "완료" },
        "en-in": { "done": "Done" },
        "en-au": { "done": "Done" },
        "en-sg": { "done": "Done" },
        "id-id": { "done": "Selesai" },
        "th-th": { "done": "เสร็จสิ้น" },
        "vi-vn": { "done": "done" },
        "en-ph": { "done": "Done" },
        "en-my": { "done": "Done" },
        "en-gb": { "done": "Done" },
        "cs-cz": { "done": "Hotovo" },
        "da-dk": { "done": "Udført" },
        "de-de": { "done": "Fertig" },
        "es-es": { "done": "Hecho" },
        "fi-fi": { "done": "Valmis" },
        "fr-fr": { "done": "Terminé" },
        "it-it": { "done": "Fine" },
        "nb-no": { "done": "Ferdig" },
        "nl-nl": { "done": "Gereed" },
        "pl-pl": { "done": "Gotowe" },
        "ro-ro": { "done": "Gata" },
        "ru-ru": { "done": "Готово" },
        "sv-se": { "done": "Klart" },
        "tr-tr": { "done": "Bitti" },
        "fr-be": { "done": "Terminé" },
        "de-at": { "done": "Fertig" },
        "en-eu": { "done": "Done" },
        "en-me": { "done": "Done" },
        "es-la": { "done": "Listo" },
        "pt-br": { "done": "Concluído" }
    }

    const setNvDone = function () {
        var acceptbtn = document.getElementById('onetrust-accept-btn-handler');
        var rejectbtn = document.getElementById('onetrust-reject-all-handler');
		var btngroup = document.getElementById('onetrust-button-group');
		var isdoneBtn= document.getElementById('nv-done-btn-handler');		

        if(acceptbtn){
            acceptbtn.style.display = 'none';
        }
        if(rejectbtn){
            rejectbtn.style.display = 'none';
        }
        
		if(!isdoneBtn) {
			const lang = document.documentElement.lang || 'en';
			const doneButton = document.createElement('button');
			doneButton.id = 'nv-done-btn-handler';
			doneButton.textContent = translations[lang]?.done || translations['en'].done || 'Done';		
			if(btngroup) {
				document.getElementById('onetrust-button-group').appendChild(doneButton);      
			}		
		}
		const doneBtnevnt = document.getElementById('nv-done-btn-handler');
		doneBtnevnt.addEventListener('click', function () {
			OneTrust.Close();
		});
        
    };

    /* if gpc enabled then setting the Done button with translations */
    if(navigator.globalPrivacyControl) {
		if(!OneTrust.IsAlertBoxClosed()) {
			setNvDone();
		}    
    }        
	
	
	// Function to parse query parameters from URL
	function getQueryParam(param) {
		const queryString = window.location.search;
		const urlParams = new URLSearchParams(queryString);
		return urlParams.get(param);
	}
	
	var manageCookiesLink = document.getElementById("manage-nvcookies-link");
	if(manageCookiesLink) {
		manageCookiesLink.addEventListener('click', function() {
			OneTrust.ToggleInfoDisplay();
		});
	}
	
	var showprefPanel = getQueryParam('manage-cookies');
	if(showprefPanel ==='true') {
		OneTrust.ToggleInfoDisplay();
	}		
	
},false);
/*
document.addEventListener("DOMContentLoaded", function() {
	
	function deleteCookie(name) {
    var domains = [
        '.www.nvidia.com',
        '.developer.nvidia.com',      
        '.nvidianews.nvidia.com',
		'.air.nvidia.com',
		'.www.nvidia.cn',
		'.forums.developer.nvidia.com'
    ];

    var path = '/'; 

    domains.forEach(function(domain) {
        document.cookie = name + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=" + path + "; domain=" + domain + ";";
    });
    
}
deleteCookie('OptanonConsent');
});*/




